#!/bin/bash

###################### Definitions ######################

DEST=/tmp/request.log

FAILED_TEST_LIST=""
FAILED_TEST_COUNT=0

starttest(){
    CURRENT_TEST=$1
    echo "=============================================="
    echo "         Testing $CURRENT_TEST"
    echo "=============================================="
    ERR=0
}

endtest(){
    if [ $ERR -eq "0" ]; then
        RESULT=PASSED
    else
        RESULT=FAILED
        FAILED_TEST_LIST+=$CURRENT_TEST
        FAILED_TEST_LIST+=" "
        FAILED_TEST_COUNT=$(($FAILED_TEST_COUNT + 1))
    fi

    echo "******************* $RESULT *******************"
    echo ""
    echo ""
}

wait_for_port() {
    TIMEOUT=${2:-60}
    while ! netstat -an | grep -w ${1} >/dev/null 2>&1; do
        sleep 1
        ((TIMEOUT=TIMEOUT-1))
        if [ $TIMEOUT -le 0 ]; then
            echo >&2 "warn: timed out waiting for port ${1} listener"
            netstat -an | grep -w LISTEN >&2
            return
        fi
    done
    echo 1
}

wait_for_files() {
    TIMEOUT=${2:-60}
    while ! compgen -G "${1}" > /dev/null; do
        sleep 1
        ((TIMEOUT=TIMEOUT-1))
        if [ $TIMEOUT -le 0 ]; then
            echo >&2 "warn: timed out waiting for port ${1} files"
            ls -lRa /tmp/out >&2
            return
        fi
    done
    echo 1
}

###################### Tests ######################

# AppView nginx with a variable nginx worker count
# Use custom appview configuration to send only http events to a tcp socket
# Use apache ab to send requests to nginx
# Assert on number of http events received
# $1 nginx worker count
# $2 http request count (~per second)
# $3 iterations of http request
send_event_tcp() {
    starttest "Send_Event_TCP:_$1_AppView_$2_Requests/Sec_$3_Iterations"
    requests=$(($2*$3))
    rm -f ${DEST}
    # start tcpserver
    tcpserver > ${DEST} &
    tcpserver_pid=$!
    # sleep to allow tcpserver to start up
    sleep 1
    # start nginx with modified config
    sed -i "s/worker_processes\ auto/worker_processes\ $1/" /etc/nginx/nginx.conf
    APPVIEW_HOME=/opt/test/conf_1 ldappview nginx
    # sleep to allow nginx to start up
    sleep 2
    # start ab benchmark test
    for ((i=0;i<$3;i++))
    do
        ab -n $2 -c 1 http://127.0.0.1/ > /dev/null 2>&1
        sleep 1
    done
    # sleep to allow ab to complete
    sleep 10
    if [ "$(wait_for_files "${DEST}")" ]; then
        found=$(grep '"source":"http.req"' ${DEST} | wc -l)
        if [ $found -eq $requests ] ; then 
            echo "PASS: No missing http request events"
        else
            echo "FAIL: Missing http request events: expected: $requests, got: $found, dropped: $(($requests-found))"
            ERR+=1
        fi
        found=$(grep '"source":"http.resp"' ${DEST} | wc -l)
        if [ $found -eq $requests ] ; then 
            echo "PASS: No missing http response events"
        else
            echo "FAIL: Missing http response events: expected: $requests, got: $found, dropped: $(($requests-found))"
            ERR+=1
        fi
    else
        echo "FAIL: no output files"
        ERR+=1
    fi
    # kill processes
    kill $tcpserver_pid
    nginx -s quit
    # sleep to allow nginx to close
    sleep 2
    endtest
}

send_event_tcp 1 100 60
send_event_tcp 1 1000 60
send_event_tcp 1 2000 60
send_event_tcp 1 3000 60
send_event_tcp 1 4000 60
send_event_tcp 1 5000 60
send_event_tcp 1 8000 60
send_event_tcp 1 10000 60

###################### Summary ######################

# Results
echo ""
if (( $FAILED_TEST_COUNT == 0 )); then
    echo "************ ALL SEND EVENT TESTS PASSED ************"
else
    echo "************ $FAILED_TEST_COUNT SEND EVENT TESTS FAILED ************"
    echo "Failed tests: $FAILED_TEST_LIST"
fi
echo ""

exit ${FAILED_TEST_COUNT}

